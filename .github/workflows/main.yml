name: Release

on:
  push:
    tags: 
      - 'v*.*.*'

jobs:
  create-release:

    # job's name
    name: build and release electron app

    # the type of machine to run the job on
    runs-on: ${{ matrix.os }}

    # create a build matrix for jobs
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, macos-10.15]
    
    steps:
      # step1: check out repository
      - name: Check out git repository
        uses: actions/checkout@v3

      # step2: install node env
      - name: Install Node.js
        uses: actions/setup-node@v2-beta

      # step3: npm install
      - name: npm install
        run: |
          npm install --force

      # step4: rebuild
      - name: rebuild
        run: |
          npm run e-rebuild
      
      # step5: npm run build
      - name: build
        run: |
          npm run build

      # step6: build app for mac/win
      - name: build windows app
        if: matrix.os == 'windows-2019'
        run: |
          npm run electron:build --win
      
      - name: build mac app
        if: matrix.os == 'macos-10.15'
        run: |
          npm run electron:build --mac

      # step7: cleanup artifacts in dist_electron
      - name: cleanup artifacts
        run: |
          npx rimraf "release/!(*.exe|*.dmg)"

      # step8: upload artifacts
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: dist_electron

      # step9: create release
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "release/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}